/**
 * SB65
 * Copyright (C) 2020 David Jolly
 *
 * SB65 is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * SB65 is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef SB65_SYSTEM_PROCESSOR_TYPE_H_
#define SB65_SYSTEM_PROCESSOR_TYPE_H_

#include "../../inc/system/processor.h"
#include "../../inc/runtime.h"

#define ADDRESS_INTERRUPT_NON_MASKABLE_HIGH 0xfffb
#define ADDRESS_INTERRUPT_NON_MASKABLE_LOW 0xfffa
#define ADDRESS_INTERRUPT_RESET_HIGH 0xfffd
#define ADDRESS_INTERRUPT_RESET_LOW 0xfffc
#define ADDRESS_INTERRUPT_MASKABLE_HIGH 0xffff
#define ADDRESS_INTERRUPT_MASKABLE_LOW 0xfffe

#define CYCLES_PER_FRAME 500

#define INTERRUPT_CYCLE 7
#define INTERRUPT_LENGTH ADDRESS_LENGTH(ADDRESS_INTERRUPT_LOW, ADDRESS_INTERRUPT_HIGH)

#define INSTRUCTION_CYCLE(_OPCODE_) \
	MODE_CYCLE[INSTRUCTION_MODE(_OPCODE_)]

#define INSTRUCTION_LENGTH(_OPCODE_) \
	MODE_LENGTH[INSTRUCTION_MODE(_OPCODE_)]

#define INSTRUCTION_MODE(_OPCODE_) \
	MODE[_OPCODE_]

typedef enum {
	FLAG_CARRY = 0,
	FLAG_ZERO,
	FLAG_INTERRUPT_DISABLE,
	FLAG_DECIMAL_NODE,
	FLAG_BREAKPOINT,
	FLAG_UNUSED,
	FLAG_OVERFLOW,
	FLAG_NEGATIVE,
	FLAG_MAX,
} sb65_flag_t;

typedef enum {
	LENGTH_NONE = 0,
	LENGTH_BYTE,
	LENGTH_WORD,
	LENGTH_MAX,
} sb65_length_t;

typedef enum {
	MODE_ABSOLUTE = 0,
	MODE_ABSOLUTE_INDIRECT,
	MODE_ABSOLUTE_INDIRECT_X,
	MODE_ABSOLUTE_X,
	MODE_ABSOLUTE_Y,
	MODE_ACCUMULATOR,
	MODE_IMMEDIATE,
	MODE_IMPLIED,
	MODE_RELATIVE,
	MODE_STACK,
	MODE_UNUSED,
	MODE_ZERO_PAGE,
	MODE_ZERO_PAGE_INDIRECT,
	MODE_ZERO_PAGE_INDIRECT_Y,
	MODE_ZERO_PAGE_INDIRECT_X,
	MODE_ZERO_PAGE_RELATIVE,
	MODE_ZERO_PAGE_X,
	MODE_ZERO_PAGE_Y,
	MODE_MAX,
} sb65_mode_t;

typedef enum {
	// 0x00
	OPCODE_BRK_STACK = 0, OPCODE_ORA_ZERO_PAGE_INDIRECT_X, OPCODE_NOP_02_IMMEDIATE, OPCODE_NOP_03_UNUSED,
	OPCODE_TSB_ZERO_PAGE, OPCODE_ORA_ZERO_PAGE, OPCODE_ASL_ZERO_PAGE, OPCODE_RMB0_ZERO_PAGE,
	// 0x08
	OPCODE_PHP_STACK, OPCODE_ORA_IMMEDIATE, OPCODE_ASL_ACCUMULATOR, OPCODE_NOP_0B_UNUSED,
	OPCODE_TSB_ABSOLUTE, OPCODE_ORA_ABSOLUTE, OPCODE_ASL_ABSOLUTE, OPCODE_BBR0_ZERO_PAGE_RELATIVE,
	// 0x10
	OPCODE_BPL_RELATIVE, OPCODE_ORA_ZERO_PAGE_INDIRECT_Y, OPCODE_ORA_ZERO_PAGE_INDIRECT, OPCODE_NOP_13_UNUSED,
	OPCODE_TRB_ZERO_PAGE, OPCODE_ORA_ZERO_PAGE_X, OPCODE_ASL_ZERO_PAGE_X, OPCODE_RMB1_ZERO_PAGE,
	// 0x18
	OPCODE_CLC_IMPLIED, OPCODE_ORA_ABSOLUTE_Y, OPCODE_INC_ACCUMULATOR, OPCODE_NOP_1B_UNUSED,
	OPCODE_TRB_ABSOLUTE, OPCODE_ORA_ABSOLUTE_X, OPCODE_ASL_ABSOLUTE_X, OPCODE_BBR1_ZERO_PAGE_RELATIVE,
	// 0x20
	OPCODE_JSR_ABSOLUTE, OPCODE_AND_ZERO_PAGE_INDIRECT_X, OPCODE_NOP_22_IMMEDIATE, OPCODE_NOP_23_UNUSED,
	OPCODE_BIT_ZERO_PAGE, OPCODE_AND_ZERO_PAGE, OPCODE_ROL_ZERO_PAGE, OPCODE_RMB2_ZERO_PAGE,
	// 0x28
	OPCODE_PLP_STACK, OPCODE_AND_IMMEDIATE, OPCODE_ROL_ACCUMULATOR, OPCODE_NOP_2B_UNUSED,
	OPCODE_BIT_ABSOLUTE, OPCODE_AND_ABSOLUTE, OPCODE_ROL_ABSOLUTE, OPCODE_BBR2_ZERO_PAGE_RELATIVE,
	// 0x30
	OPCODE_BMI_RELATIVE, OPCODE_AND_ZERO_PAGE_INDIRECT_Y, OPCODE_AND_ZERO_PAGE_INDIRECT, OPCODE_NOP_33_UNUSED,
	OPCODE_BIT_ZERO_PAGE_X, OPCODE_AND_ZERO_PAGE_X, OPCODE_ROL_ZERO_PAGE_X, OPCODE_RMB3_ZERO_PAGE,
	// 0x38
	OPCODE_SEC_IMPLIED, OPCODE_AND_ABSOLUTE_Y, OPCODE_DEC_ACCUMULATOR, OPCODE_NOP_3B_UNUSED,
	OPCODE_BIT_ABSOLUTE_X, OPCODE_AND_ABSOLUTE_X, OPCODE_ROL_ABSOLUTE_X, OPCODE_BBR3_ZERO_PAGE_RELATIVE,
	// 0x40
	OPCODE_RTI_STACK, OPCODE_EOR_ZERO_PAGE_INDIRECT_X, OPCODE_NOP_42_IMMEDIATE, OPCODE_NOP_43_UNUSED,
	OPCODE_NOP_44_ZERO_PAGE, OPCODE_EOR_ZERO_PAGE, OPCODE_LSR_ZERO_PAGE, OPCODE_RMB4_ZERO_PAGE,
	// 0x48
	OPCODE_PHA_STACK, OPCODE_EOR_IMMEDIATE, OPCODE_LSR_ACCUMULATOR, OPCODE_NOP_4B_UNUSED,
	OPCODE_JMP_ABSOLUTE, OPCODE_EOR_ABSOLUTE, OPCODE_LSR_ABSOLUTE, OPCODE_BBR4_ZERO_PAGE_RELATIVE,
	// 0x50
	OPCODE_BVC_RELATIVE, OPCODE_EOR_ZERO_PAGE_INDIRECT_Y, OPCODE_EOR_ZERO_PAGE_INDIRECT, OPCODE_NOP_53_UNUSED,
	OPCODE_NOP_54_ZERO_PAGE_X, OPCODE_EOR_ZERO_PAGE_X, OPCODE_LSR_ZERO_PAGE_X, OPCODE_RMB5_ZERO_PAGE,
	// 0x58
	OPCODE_CLI_IMPLIED, OPCODE_EOR_ABSOLUTE_Y, OPCODE_PHY_STACK, OPCODE_NOP_5B_UNUSED,
	OPCODE_NOP_5C_ABSOLUTE, OPCODE_EOR_ABSOLUTE_X, OPCODE_LSR_ABSOLUTE_X, OPCODE_BBR5_ZERO_PAGE_RELATIVE,
	// 0x60
	OPCODE_RTS_STACK, OPCODE_ADC_ZERO_PAGE_INDIRECT_X, OPCODE_NOP_62_IMMEDIATE, OPCODE_NOP_63_UNUSED,
	OPCODE_STZ_ZERO_PAGE, OPCODE_ADC_ZERO_PAGE, OPCODE_ROR_ZERO_PAGE, OPCODE_RMB6_ZERO_PAGE,
	// 0x68
	OPCODE_PLA_STACK, OPCODE_ADC_IMMEDIATE, OPCODE_ROR_ACCUMULATOR, OPCODE_NOP_6B_UNUSED,
	OPCODE_JMP_ABSOLUTE_INDIRECT, OPCODE_ADC_ABSOLUTE, OPCODE_ROR_ABSOLUTE, OPCODE_BBR6_ZERO_PAGE_RELATIVE,
	// 0x70
	OPCODE_BVS_RELATIVE, OPCODE_ADC_ZERO_PAGE_INDIRECT_Y, OPCODE_ADC_ZERO_PAGE_INDIRECT, OPCODE_NOP_72_UNUSED,
	OPCODE_STZ_ZERO_PAGE_X, OPCODE_ADC_ZERO_PAGE_X, OPCODE_ROR_ZERO_PAGE_X, OPCODE_RMB7_ZERO_PAGE,
	// 0x78
	OPCODE_SEI_IMPLIED, OPCODE_ADC_ABSOLUTE_Y, OPCODE_PLY_STACK, OPCODE_NOP_7B_UNUSED,
	OPCODE_JMP_ABSOLUTE_INDIRECT_X, OPCODE_ADC_ABSOLUTE_X, OPCODE_ROR_ABSOLUTE_X, OPCODE_BBR7_ZERO_PAGE_RELATIVE,
	// 0x80
	OPCODE_BRA_RELATIVE, OPCODE_STA_ZERO_PAGE_INDIRECT_X, OPCODE_NOP_82_IMMEDIATE, OPCODE_NOP_83_UNUSED,
	OPCODE_STY_ZERO_PAGE, OPCODE_STA_ZERO_PAGE, OPCODE_STX_ZERO_PAGE, OPCODE_SMB0_ZERO_PAGE,
	// 0x88
	OPCODE_DEY_IMPLIED, OPCODE_BIT_IMMEDIATE, OPCODE_TXA_IMPLIED, OPCODE_NOP_8B_UNUSED,
	OPCODE_STY_ABSOLUTE, OPCODE_STA_ABSOLUTE, OPCODE_STX_ABSOLUTE, OPCODE_BBS0_ZERO_PAGE_RELATIVE,
	// 0x90
	OPCODE_BCC_RELATIVE, OPCODE_STA_ZERO_PAGE_INDIRECT_Y, OPCODE_STA_ZERO_PAGE_INDIRECT, OPCODE_NOP_93_UNUSED,
	OPCODE_STY_ZERO_PAGE_X, OPCODE_STA_ZERO_PAGE_X, OPCODE_STX_ZERO_PAGE_Y, OPCODE_SMB1_ZERO_PAGE,
	// 0x98
	OPCODE_TYA_IMPLIED, OPCODE_STA_ABSOLUTE_Y, OPCODE_TXS_IMPLIED, OPCODE_NOP_9B_UNUSED,
	OPCODE_STZ_ABSOLUTE, OPCODE_STA_ABSOLUTE_X, OPCODE_STZ_ABSOLUTE_X, OPCODE_BBS1_ZERO_PAGE_RELATIVE,
	// 0xa0
	OPCODE_LDY_IMMEDIATE, OPCODE_LDA_ZERO_PAGE_INDIRECT_X, OPCODE_LDX_IMMEDIATE, OPCODE_NOP_A3_UNUSED,
	OPCODE_LDY_ZERO_PAGE, OPCODE_LDA_ZERO_PAGE, OPCODE_LDX_ZERO_PAGE, OPCODE_SMB2_ZERO_PAGE,
	// 0xa8
	OPCODE_TAY_IMPLIED, OPCODE_LDA_IMMEDIATE, OPCODE_TAX_IMPLIED, OPCODE_NOP_AB_UNUSED,
	OPCODE_LDY_ABSOLUTE, OPCODE_LDA_ABSOLUTE, OPCODE_LDX_ABSOLUTE, OPCODE_BBS2_ZERO_PAGE_RELATIVE,
	// 0xb0
	OPCODE_BCS_RELATIVE, OPCODE_LDA_ZERO_PAGE_INDIRECT_Y, OPCODE_LDA_ZERO_PAGE_INDIRECT, OPCODE_NOP_B3_UNUSED,
	OPCODE_LDY_ZERO_PAGE_X, OPCODE_LDA_ZERO_PAGE_X, OPCODE_LDX_ZERO_PAGE_Y, OPCODE_SMB3_ZERO_PAGE,
	// 0xb8
	OPCODE_CLV_IMPLIED, OPCODE_LDA_ABSOLUTE_Y, OPCODE_TSX_IMPLIED, OPCODE_NOP_BB_UNUSED,
	OPCODE_LDY_ABSOLUTE_X, OPCODE_LDA_ABSOLUTE_X, OPCODE_LDX_ABSOLUTE_Y, OPCODE_BBS3_ZERO_PAGE_RELATIVE,
	// 0xc0
	OPCODE_CPY_IMMEDIATE, OPCODE_CMP_ZERO_PAGE_INDIRECT_X, OPCODE_NOP_C2_IMMEDIATE, OPCODE_NOP_C3_UNUSED,
	OPCODE_CPY_ZERO_PAGE, OPCODE_CMP_ZERO_PAGE, OPCODE_DEC_ZERO_PAGE, OPCODE_SMB4_ZERO_PAGE,
	// 0xc8
	OPCODE_INY_IMPLIED, OPCODE_CMP_IMMEDIATE, OPCODE_DEX_IMPLIED, OPCODE_WAI_IMPLIED,
	OPCODE_CPY_ABSOLUTE, OPCODE_CMP_ABSOLUTE, OPCODE_DEC_ABSOLUTE, OPCODE_BBS4_ZERO_PAGE_RELATIVE,
	// 0xd0
	OPCODE_BNE_RELATIVE, OPCODE_CMP_ZERO_PAGE_INDIRECT_Y, OPCODE_CMP_ZERO_PAGE_INDIRECT, OPCODE_NOP_D3_UNUSED,
	OPCODE_NOP_D4_ZERO_PAGE_X, OPCODE_CMP_ZERO_PAGE_X, OPCODE_DEC_ZERO_PAGE_X, OPCODE_SMB5_ZERO_PAGE,
	// 0xd8
	OPCODE_CLD_IMPLIED, OPCODE_CMP_ABSOLUTE_Y, OPCODE_PHX_STACK, OPCODE_STP_IMPLIED,
	OPCODE_NOP_ABSOLUTE, OPCODE_CMP_ABSOLUTE_X, OPCODE_DEC_ABSOLUTE_X, OPCODE_BBS5_ZERO_PAGE_RELATIVE,
	// 0xe0
	OPCODE_CPX_IMMEDIATE, OPCODE_SBC_ZERO_PAGE_INDIRECT_X, OPCODE_NOP_E2_IMMEDIATE, OPCODE_NOP_E3_UNUSED,
	OPCODE_CPX_ZERO_PAGE, OPCODE_SBC_ZERO_PAGE, OPCODE_INC_ZERO_PAGE, OPCODE_SMB6_ZERO_PAGE,
	// 0xe8
	OPCODE_INX_IMPLIED, OPCODE_SBC_IMMEDIATE, OPCODE_NOP_IMPLIED, OPCODE_NOP_EB_UNUSED,
	OPCODE_CPX_ABSOLUTE, OPCODE_SBC_ABSOLUTE, OPCODE_INC_ABSOLUTE, OPCODE_BBS6_ZERO_PAGE_RELATIVE,
	// 0xf0
	OPCODE_BEQ_RELATIVE, OPCODE_SBC_ZERO_PAGE_INDIRECT_Y, OPCODE_SBC_ZERO_PAGE_INDIRECT, OPCODE_NOP_F3_UNUSED,
	OPCODE_NOP_F4_ZERO_PAGE_X, OPCODE_SBC_ZERO_PAGE_X, OPCODE_INC_ZERO_PAGE_X, OPCODE_SMB7_ZERO_PAGE,
	// 0xf8
	OPCODE_SED_IMPLIED, OPCODE_SBC_ABSOLUTE_Y, OPCODE_PLX_STACK, OPCODE_NOP_FB_UNUSED,
	OPCODE_NOP_FC_ABSOLUTE, OPCODE_SBC_ABSOLUTE_X, OPCODE_INC_ABSOLUTE_X, OPCODE_BBS7_ZERO_PAGE_RELATIVE,
} sb65_opcode_t;

static const sb65_mode_t MODE[] = {
	// 0x00
	MODE_STACK, MODE_ZERO_PAGE_INDIRECT_X, MODE_IMMEDIATE, MODE_UNUSED,
	MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE,
	// 0x08
	MODE_STACK, MODE_IMMEDIATE, MODE_ACCUMULATOR, MODE_UNUSED,
	MODE_ABSOLUTE, MODE_ABSOLUTE, MODE_ABSOLUTE, MODE_ZERO_PAGE_RELATIVE,
	// 0x10
	MODE_RELATIVE, MODE_ZERO_PAGE_INDIRECT_Y, MODE_ZERO_PAGE_INDIRECT, MODE_UNUSED,
	MODE_ZERO_PAGE, MODE_ZERO_PAGE_X, MODE_ZERO_PAGE_X, MODE_ZERO_PAGE,
	// 0x18
	MODE_IMPLIED, MODE_ABSOLUTE_Y, MODE_ACCUMULATOR, MODE_UNUSED,
	MODE_ABSOLUTE, MODE_ABSOLUTE_X, MODE_ABSOLUTE_X, MODE_ZERO_PAGE_RELATIVE,
	// 0x20
	MODE_ABSOLUTE, MODE_ZERO_PAGE_INDIRECT_X, MODE_IMMEDIATE, MODE_UNUSED,
	MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE,
	// 0x28
	MODE_STACK, MODE_IMMEDIATE, MODE_ACCUMULATOR, MODE_UNUSED,
	MODE_ABSOLUTE, MODE_ABSOLUTE, MODE_ABSOLUTE, MODE_ZERO_PAGE_RELATIVE,
	// 0x30
	MODE_RELATIVE, MODE_ZERO_PAGE_INDIRECT_Y, MODE_ZERO_PAGE_INDIRECT, MODE_UNUSED,
	MODE_ZERO_PAGE_X, MODE_ZERO_PAGE_X, MODE_ZERO_PAGE_X, MODE_ZERO_PAGE,
	// 0x38
	MODE_IMPLIED, MODE_ABSOLUTE_Y, MODE_ACCUMULATOR, MODE_UNUSED,
	MODE_ABSOLUTE_X, MODE_ABSOLUTE_X, MODE_ABSOLUTE_X, MODE_ZERO_PAGE_RELATIVE,
	// 0x40
	MODE_STACK, MODE_ZERO_PAGE_INDIRECT_X, MODE_IMMEDIATE, MODE_UNUSED,
	MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE,
	// 0x48
	MODE_STACK, MODE_IMMEDIATE, MODE_ACCUMULATOR, MODE_UNUSED,
	MODE_ABSOLUTE, MODE_ABSOLUTE, MODE_ABSOLUTE, MODE_ZERO_PAGE_RELATIVE,
	// 0x50
	MODE_RELATIVE, MODE_ZERO_PAGE_INDIRECT_Y, MODE_ZERO_PAGE_INDIRECT, MODE_UNUSED,
	MODE_ZERO_PAGE_X, MODE_ZERO_PAGE_X, MODE_ZERO_PAGE_X, MODE_ZERO_PAGE,
	// 0x58
	MODE_IMPLIED, MODE_ABSOLUTE_Y, MODE_STACK, MODE_UNUSED,
	MODE_ABSOLUTE, MODE_ABSOLUTE_X, MODE_ABSOLUTE_X, MODE_ZERO_PAGE_RELATIVE,
	// 0x60
	MODE_STACK, MODE_ZERO_PAGE_INDIRECT_X, MODE_IMMEDIATE, MODE_UNUSED,
	MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE,
	// 0x68
	MODE_STACK, MODE_IMMEDIATE, MODE_ACCUMULATOR, MODE_UNUSED,
	MODE_ABSOLUTE_INDIRECT, MODE_ABSOLUTE, MODE_ABSOLUTE, MODE_ZERO_PAGE_RELATIVE,
	// 0x70
	MODE_RELATIVE, MODE_ZERO_PAGE_INDIRECT_Y, MODE_ZERO_PAGE_INDIRECT, MODE_UNUSED,
	MODE_ZERO_PAGE_X, MODE_ZERO_PAGE_X, MODE_ZERO_PAGE_X, MODE_ZERO_PAGE,
	// 0x78
	MODE_IMPLIED, MODE_ABSOLUTE_Y, MODE_STACK, MODE_UNUSED,
	MODE_ABSOLUTE_INDIRECT_X, MODE_ABSOLUTE_X, MODE_ABSOLUTE_X, MODE_ZERO_PAGE_RELATIVE,
	// 0x80
	MODE_RELATIVE, MODE_ZERO_PAGE_INDIRECT_X, MODE_IMMEDIATE, MODE_UNUSED,
	MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE,
	// 0x88
	MODE_IMPLIED, MODE_IMMEDIATE, MODE_IMPLIED, MODE_UNUSED,
	MODE_ABSOLUTE, MODE_ABSOLUTE, MODE_ABSOLUTE, MODE_ZERO_PAGE_RELATIVE,
	// 0x90
	MODE_RELATIVE, MODE_ZERO_PAGE_INDIRECT_Y, MODE_ZERO_PAGE_INDIRECT, MODE_UNUSED,
	MODE_ZERO_PAGE_X, MODE_ZERO_PAGE_X, MODE_ZERO_PAGE_Y, MODE_ZERO_PAGE,
	// 0x98
	MODE_IMPLIED, MODE_ABSOLUTE_Y, MODE_IMPLIED, MODE_UNUSED,
	MODE_ABSOLUTE, MODE_ABSOLUTE_X, MODE_ABSOLUTE_X, MODE_ZERO_PAGE_RELATIVE,
	// 0xa0
	MODE_IMMEDIATE, MODE_ZERO_PAGE_INDIRECT_X, MODE_IMMEDIATE, MODE_UNUSED,
	MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE,
	// 0xa8
	MODE_IMPLIED, MODE_IMMEDIATE, MODE_IMPLIED, MODE_UNUSED,
	MODE_ABSOLUTE, MODE_ABSOLUTE, MODE_ABSOLUTE, MODE_ZERO_PAGE_RELATIVE,
	// 0xb0
	MODE_RELATIVE, MODE_ZERO_PAGE_INDIRECT_Y, MODE_ZERO_PAGE_INDIRECT, MODE_UNUSED,
	MODE_ZERO_PAGE_X, MODE_ZERO_PAGE_X, MODE_ZERO_PAGE_Y, MODE_ZERO_PAGE,
	// 0xb8
	MODE_IMPLIED, MODE_ABSOLUTE_Y, MODE_IMPLIED, MODE_UNUSED,
	MODE_ABSOLUTE_X, MODE_ABSOLUTE_X, MODE_ABSOLUTE_Y, MODE_ZERO_PAGE_RELATIVE,
	// 0xc0
	MODE_IMMEDIATE, MODE_ZERO_PAGE_INDIRECT_X, MODE_IMMEDIATE, MODE_UNUSED,
	MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE,
	// 0xc8
	MODE_IMPLIED, MODE_IMMEDIATE, MODE_IMPLIED, MODE_IMPLIED,
	MODE_ABSOLUTE, MODE_ABSOLUTE, MODE_ABSOLUTE, MODE_ZERO_PAGE_RELATIVE,
	// 0xd0
	MODE_RELATIVE, MODE_ZERO_PAGE_INDIRECT_Y, MODE_ZERO_PAGE_INDIRECT, MODE_UNUSED,
	MODE_ZERO_PAGE_X, MODE_ZERO_PAGE_X, MODE_ZERO_PAGE_X, MODE_ZERO_PAGE,
	// 0xd8
	MODE_IMPLIED, MODE_ABSOLUTE_Y, MODE_STACK, MODE_IMPLIED,
	MODE_ABSOLUTE, MODE_ABSOLUTE_X, MODE_ABSOLUTE_X, MODE_ZERO_PAGE_RELATIVE,
	// 0xe0
	MODE_IMMEDIATE, MODE_ZERO_PAGE_INDIRECT_X, MODE_IMMEDIATE, MODE_UNUSED,
	MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE, MODE_ZERO_PAGE,
	// 0xe8
	MODE_IMPLIED, MODE_IMMEDIATE, MODE_IMPLIED, MODE_UNUSED,
	MODE_ABSOLUTE, MODE_ABSOLUTE, MODE_ABSOLUTE, MODE_ZERO_PAGE_RELATIVE,
	// 0xf0
	MODE_RELATIVE, MODE_ZERO_PAGE_INDIRECT_Y, MODE_ZERO_PAGE_INDIRECT, MODE_UNUSED,
	MODE_ZERO_PAGE_X, MODE_ZERO_PAGE_X, MODE_ZERO_PAGE_X, MODE_ZERO_PAGE,
	// 0xf8
	MODE_IMPLIED, MODE_ABSOLUTE_Y, MODE_STACK, MODE_UNUSED,
	MODE_ABSOLUTE, MODE_ABSOLUTE_X, MODE_ABSOLUTE_X, MODE_ZERO_PAGE_RELATIVE,
	};

typedef struct {
	uint32_t base;
	uint32_t boundary;
	uint32_t branch;
	uint32_t read_write_modify;
} sb65_mode_cycle_t;

static const sb65_mode_cycle_t MODE_CYCLE[] = {
	// MODE_ABSOLUTE
	{ 4, 0, 0, 2 },
	// MODE_ABSOLUTE_INDIRECT
	{ 5, 0, 0, 0 },
	// MODE_ABSOLUTE_INDIRECT_X
	{ 6, 0, 0, 0 },
	// MODE_ABSOLUTE_X
	{ 4, 1, 0, 2 },
	// MODE_ABSOLUTE_Y
	{ 4, 1, 0, 0 },
	// MODE_ACCUMULATOR
	{ 2, 0, 0, 0 },
	// MODE_IMMEDIATE
	{ 2, 0, 0, 0 },
	// MODE_IMPLIED
	{ 2, 0, 0, 0 },
	// MODE_RELATIVE
	{ 2, 1, 1, 0 },
	// MODE_STACK
	{ 3, 0, 0, 0 },
	// MODE_UNUSED
	{ 1, 0, 0, 0 },
	// MODE_ZERO_PAGE
	{ 3, 0, 0, 2 },
	// MODE_ZERO_PAGE_INDIRECT
	{ 5, 1, 0, 0 },
	// MODE_ZERO_PAGE_INDIRECT_X
	{ 6, 0, 0, 0 },
	// MODE_ZERO_PAGE_INDIRECT_Y
	{ 5, 1, 0, 0 },
	// MODE_ZERO_PAGE_RELATIVE
	{ 2, 1, 0, 0 },
	// MODE_ZERO_PAGE_X
	{ 4, 0, 0, 2 },
	// MODE_ZERO_PAGE_Y
	{ 4, 0, 0, 0 },
	};

static const uint32_t MODE_LENGTH[] = {
	// MODE_ABSOLUTE
	LENGTH_WORD,
	// MODE_ABSOLUTE_INDIRECT_X
	LENGTH_WORD,
	// MODE_ABSOLUTE_X
	LENGTH_WORD,
	// MODE_ABSOLUTE_Y
	LENGTH_WORD,
	// MODE_ABSOLUTE_INDIRECT
	LENGTH_WORD,
	// MODE_ACCUMULATOR
	LENGTH_NONE,
	// MODE_IMMEDIATE
	LENGTH_BYTE,
	// MODE_IMPLIED
	LENGTH_NONE,
	// MODE_RELATIVE
	LENGTH_BYTE,
	// MODE_STACK
	LENGTH_NONE,
	// MODE_UNUSED
	LENGTH_NONE,
	// MODE_ZERO_PAGE
	LENGTH_BYTE,
	// MODE_ZERO_PAGE_INDIRECT_X
	LENGTH_BYTE,
	// MODE_ZERO_PAGE_X
	LENGTH_BYTE,
	// MODE_ZERO_PAGE_Y
	LENGTH_BYTE,
	// MODE_ZERO_PAGE_INDIRECT_Y
	LENGTH_BYTE,
	// MODE_ZERO_PAGE_INDIRECT
	LENGTH_BYTE,
	// MODE_ZERO_PAGE_RELATIVE
	LENGTH_WORD,
	};

enum {
	INSTRUCTION_OPCODE = 0,
	INSTRUCTION_OPERAND_LOW,
	INSTRUCTION_OPERAND_HIGH,
	INSTRUCTION_MAX,
};

typedef union {

	struct {
		uint8_t opcode;
		sb65_register_t operand;
	};

	uint8_t raw[INSTRUCTION_MAX];
} __attribute__((packed)) sb65_instruction_t;

typedef uint32_t (*sb65_instruction_cb)(
	__in sb65_processor_t *processor,
	__in sb65_instruction_t *instruction
	);

#endif /* SB65_SYSTEM_PROCESSOR_TYPE_H_ */
